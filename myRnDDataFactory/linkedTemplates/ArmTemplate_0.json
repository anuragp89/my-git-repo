{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "myRnDDataFactory"
		},
		"OutputAzureSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OutputAzureSQL'"
		},
		"myLocalPostgresql_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'myLocalPostgresql'"
		},
		"InputDataLake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://myrnddatalake.dfs.core.windows.net"
		},
		"blob_Input_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://anuragblob1.blob.core.windows.net"
		},
		"myPipelieTrigger_properties_DataLakeToAzureSQL_parameters_fileName": {
			"type": "string",
			"defaultValue": " Planes.csv"
		},
		"myPipelieTrigger_properties_DataLakeToAzureSQL_parameters_tableName": {
			"type": "string",
			"defaultValue": "Planes"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/InputDataLake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('InputDataLake_properties_typeProperties_url')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputAzureSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('OutputAzureSQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blob_Input')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('blob_Input_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onpremIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputCSVFromADLS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InputDataLake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"fileSystem": "adfinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/InputDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputHRData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "InputDataLake",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "HR Data.csv",
						"fileSystem": "adfinput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/InputDataLake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blob_Input",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "movies.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movieId",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blob_Input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputBlobCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blob_Input",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blob_Input')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputDataTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OutputAzureSQL",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "Headcount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Managers",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AverageDirects",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrgDepartments",
						"type": "varchar"
					},
					{
						"name": "PositionName",
						"type": "varchar"
					},
					{
						"name": "AniversarieThisMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NewStarters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vacancy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "TotalEmployeesAtStartofYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalEmployeesAtEndofYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalEmployeesLost",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AttritionPer",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "ExpectedAttritionPer",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "ExpectedAttrition",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "TargetHeadcount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "EmploymentType",
						"type": "varchar"
					},
					{
						"name": "Leavers",
						"type": "varchar"
					},
					{
						"name": "IncidentStatus",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OutputAzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputHRDataTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OutputAzureSQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "Country",
						"type": "varchar"
					},
					{
						"name": "Headcount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Managers",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AverageDirects",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrgDepartments",
						"type": "varchar"
					},
					{
						"name": "PositionName",
						"type": "varchar"
					},
					{
						"name": "AniversarieThisMonth",
						"type": "int",
						"precision": 10
					},
					{
						"name": "NewStarters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Vacancy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "TotalEmployeesAtStartofYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalEmployeesAtEndofYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalEmployeesLost",
						"type": "int",
						"precision": 10
					},
					{
						"name": "AttritionPer",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "ExpectedAttritionPer",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "ExpectedAttrition",
						"type": "decimal",
						"precision": 18,
						"scale": 4
					},
					{
						"name": "TargetHeadcount",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Gender",
						"type": "varchar"
					},
					{
						"name": "EmploymentType",
						"type": "varchar"
					},
					{
						"name": "Leavers",
						"type": "varchar"
					},
					{
						"name": "IncidentStatus",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "HRData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OutputAzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myLocalPostgresql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "PostgreSql",
				"typeProperties": {
					"connectionString": "[parameters('myLocalPostgresql_connectionString')]"
				},
				"connectVia": {
					"referenceName": "onpremIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/onpremIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakeToAzureSQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyDataLaketoAzureSQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.HRData",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Headcount",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Managers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Managers",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Average Directs (Headcount/Manager)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AverageDirects",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Org Departments",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "OrgDepartments",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PositionName",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "PositionName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Aniversaries this month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AniversarieThisMonth",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "New Starters",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "NewStarters",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Vacancy",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Vacancy",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total Employees at the Start of the Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalEmployeesAtStartofYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total Employees at the End of the Year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalEmployeesAtEndofYear",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Total employees lost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TotalEmployeesLost",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Attrition %",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "AttritionPer",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Expected Attrition (%)",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExpectedAttritionPer",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Expected Attrition",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ExpectedAttrition",
											"type": "Decimal",
											"physicalType": "decimal"
										}
									},
									{
										"source": {
											"name": "Target Headcount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "TargetHeadcount",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Gender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Employment type",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "EmploymentType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Leavers",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Leavers",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "incident Status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IncidentStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InputHRData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputHRDataTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CopyCSVtoTable",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "BackupTableData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "delete from dbo.HRData",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "InputCSVFromADLS",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@pipeline().parameters.fileName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputDataTable",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.tableName",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "BackupTableData",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "CopyDataLaketoAzureSQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OutputDataTable",
								"type": "DatasetReference",
								"parameters": {
									"tableName": {
										"value": "@pipeline().parameters.tableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "InputCSVFromADLS",
								"type": "DatasetReference",
								"parameters": {
									"fileName": {
										"value": "@concat(pipeline().parameters.fileName,'_backup',utcnow(),'.csv')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "CopyDataLaketoAzureSQL",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"parameters": {
					"fileName": {
						"type": "string"
					},
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-08-23T08:51:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputHRData')]",
				"[concat(variables('factoryId'), '/datasets/OutputHRDataTable')]",
				"[concat(variables('factoryId'), '/datasets/InputCSVFromADLS')]",
				"[concat(variables('factoryId'), '/datasets/OutputDataTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceTableOrganization')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myLocalPostgresql",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "PostgreSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "public",
					"table": "data_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myLocalPostgresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MoviesCleanFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "MoviesCSV",
								"type": "DatasetReference"
							},
							"name": "Movies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "OutputBlobCSV",
								"type": "DatasetReference"
							},
							"name": "MoviesClean"
						},
						{
							"dataset": {
								"referenceName": "OutputBlobCSV",
								"type": "DatasetReference"
							},
							"name": "MoviesByYear"
						}
					],
					"transformations": [
						{
							"name": "YearExtraction"
						},
						{
							"name": "AggregateMoviesByYear"
						}
					],
					"script": "source(output(\n\t\tmovieId as string,\n\t\ttitle as string,\n\t\tgenres as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> Movies\nMovies derive(Year = toInteger(trim(right(title, 6), '()')),\n\t\ttitle = toString(left(title, length(title) -6))) ~> YearExtraction\nYearExtraction aggregate(groupBy(Year),\n\tMoviesCount = count(),\n\tpartitionBy('hash', 1)) ~> AggregateMoviesByYear\nYearExtraction sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MovieWithYear.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MoviesClean\nAggregateMoviesByYear sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['MoviesByYear'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MoviesByYear"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MoviesCSV')]",
				"[concat(variables('factoryId'), '/datasets/OutputBlobCSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformMoviesCSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "MoviesCleanFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "MoviesCleanFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Movies": {},
									"MoviesClean": {},
									"MoviesByYear": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-10-29T08:45:55Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/MoviesCleanFlow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myPipelieTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "DataLakeToAzureSQL",
							"type": "PipelineReference"
						},
						"parameters": {
							"fileName": "[parameters('myPipelieTrigger_properties_DataLakeToAzureSQL_parameters_fileName')]",
							"tableName": "[parameters('myPipelieTrigger_properties_DataLakeToAzureSQL_parameters_tableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-08-23T08:44:00Z",
						"endTime": "2020-10-18T10:32:00Z",
						"timeZone": "UTC",
						"schedule": {
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DataLakeToAzureSQL')]"
			]
		}
	]
}